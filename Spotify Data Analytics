# For this project, I downloaded Spotify data from Kaggle.
I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

10 most popular artists for this time period

SELECT artist_name,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10

What artist had the longest song, and what song it was.

SELECT artist_name, MAX (duration_ms) AS Milliseconds, track_name
FROM BIT_DB.spotifydata
ORDER BY duration_ms desc
LIMIT 1

Average tempo,

SELECT AVG (tempo) AS tempo_avg
FROM BIT_DB.spotifydata

Percentage of liveness per track.

SELECT artist_name, track_name,
ROUND (liveness*100,1) AS Live_percent
FROM BIT_DB.spotifydata

Another way to show average popularity using CTE and add a tag

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
